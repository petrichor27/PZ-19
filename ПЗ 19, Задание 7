#include <iostream>
#include <fstream>
using namespace std;

bool Sochet(int* res, int n, int k)
{
	for (int i = k - 1; i >= 0; i--)
		if (res[i] < n - k + i)
		{
			res[i]++;
			for (int j = i + 1; j < k; j++)
				res[j] = res[j - 1] + 1;
			return true;
		}
	return false;
}
int main()
{
	setlocale(LC_ALL, "RUS");
	ofstream fout("OUTPUT.res");
	int p, q;
	cout << "Введите p:";
	cin >> p;//кол-во вершин
	q = p * (p - 1) / 2;//макс кол-во ребер
	int* res = new int[p];//массив для сочетания
	for (int i = 0; i < p; i++)
		res[i] = i;
	int** reb = new int* [q*2];//матрица для ребер
	for (int i = 0; i < q*2; i++)
		reb[i] = new int[2];
	if (p >= 2)
	{
		int num = 0;
		do
		{
			// ребра ->
			reb[num][0] = res[0];
			reb[num][1] = res[1];

			// ребра <-
			reb[num + q][0] = res[1];
			reb[num + q][1] = res[0];
			num++;
		} while (Sochet(res, p, 2));
	}
	int* res1 = new int[q*2];//тоже для сочетания
	bool** ms = new bool* [p];//матрица смежности
	for (int i = 0; i < p; i++)
		ms[i] = new bool[p];
	int num = 0;
	for (int t = 0; t <= p*(p-1); t++)//кол-во ребер
	{
		for (int i = 0; i < q*2; i++)
			res1[i] = i;
		if (p * (p - 1) >= t)
		{
			do
			{
				for (int i = 0; i < p; i++)
					for (int j = 0; j < p; j++)
						ms[i][j] = 0;
				fout << num + 1 << ")\n";
				for (int i = 0; i < t; i++)
				{
					ms[reb[res1[i]][0]][reb[res1[i]][1]] = 1;
				}
				for (int i = 0; i < p; i++)
				{
					for (int j = 0; j < p; j++)
						fout << ms[i][j] << " ";
					fout << endl;
				}
				num++;
				fout << endl;
			} while (Sochet(res1, q*2, t));

		}
	}
	
	cout << "Было построено " << num << " матриц смежности вершин\n";
	fout.close();
	return 0;
}
